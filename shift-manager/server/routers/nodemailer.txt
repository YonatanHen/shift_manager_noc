  var nodeoutlook = require('nodejs-nodemailer-outlook')
        var nodemailer = require('nodemailer');
        var smtpTransport = require('nodemailer-smtp-transport');

        var transporter = nodemailer.createTransport(smtpTransport({
            service: 'gmail',
            host: 'smtp.gmail.com',
            secure: false,
            auth: {
              user: 'nocshiftreporter@gmail.com',
              pass: `nocshift1!`
            }
          }));
          
          var mailOptions = {
            from: 'nocshiftreporter@gmail.com',
            to: 'yehonatnh@accessfintech.com',
            subject: `NOC Shift Report of ${report.reporter}`,
            text: 'That was easy!',
            html: `<h1 style="color:#32998d"> Report by ${report.reporter} at ${report.time} </h1>
                    <h3 style="color:#32998d"> Production: </h3>
                    <h4>
                    alerts:
                    </h4>
                    ${report.production.alerts.map(alert => {
                        return (
                            `<hr>
                            <h5>${alert.title} - ${alert.time}</h5>
                            ${alert.content}`
                        )
                    })}
                    <h4>
                    follows:
                    ${report.production.follows.map(follow => {
                        return (
                            `<hr>
                            <h5>${follow.title} - ${follow.time}</h5>
                            ${follow.content}`
                        )
                    })}
                    </h4>
                    <h3 style="color:#32998d"> Staging: </h3>
                    <h4>
                    alerts:
                    </h4>
                    ${report.staging.alerts.map(alert => {
                        return (
                            `<hr>
                            <h5>${alert.title} - ${alert.time}</h5>
                            ${alert.content}`
                        )
                    })}
                    <h4>
                    follows:
                    ${report.staging.follows.map(follow => {
                        return (
                            `<hr>
                            <h5>${follow.title} - ${follow.time}</h5>
                            ${follow.content}`
                        )
                    }
                )}`
          }
          
          transporter.sendMail(mailOptions, function(error, info){
            if (error) {
              console.log(error);
            } else {
              console.log('Email sent: ' + info.response);
            }
          });  

//         nodeoutlook.sendEmail({
//         auth: {
//             user: "nocshiftreporter@gmail.com",
//             pass: "shift1!"
//         },
//         from: 'nocshiftreporter@gmail.com',
//         to: 'yehonatanh@accessfintech.com',
//         subject: `NOC Shift Report of ${report.reporter}`, 
//         html: `<h1 style="color:#32998d"> Report by ${report.reporter} at ${report.time} </h1>
//         <h3 style="color:#32998d"> Production: </h3>
//         <h4>
//           alerts:
//         </h4>
//         ${report.production.alerts.map(alert => {
//             return (
//                 `<hr>
//                 <h5>${alert.title} - ${alert.time}</h5>
//                  ${alert.content}`
//             )
//         })}
//         <h4>
//           follows:
//           ${report.production.follows.map(follow => {
//             return (
//                 `<hr>
//                 <h5>${follow.title} - ${follow.time}</h5>
//                  ${follow.content}`
//             )
//         })}
//         </h4>
//         <h3 style="color:#32998d"> Staging: </h3>
//         <h4>
//           alerts:
//         </h4>
//         ${report.staging.alerts.map(alert => {
//             return (
//                 `<hr>
//                 <h5>${alert.title} - ${alert.time}</h5>
//                  ${alert.content}`
//             )
//         })}
//         <h4>
//           follows:
//           ${report.staging.follows.map(follow => {
//             return (
//                 `<hr>
//                  <h5>${follow.title} - ${follow.time}</h5>
//                  ${follow.content}`
//             )
//         })}
//         </h4>`, //TODO: Edit the report
//         text: 'This is text version!',
//         // replyTo: 'receiverXXX@gmail.com',
//         // attachments: [
//         //                 {
//         //                     filename: 'text1.txt',
//         //                     content: 'hello world!'
//         //                 },
//         //                 {   // binary buffer as an attachment
//         //                     filename: 'text2.txt',
//         //                     content: new Buffer('hello world!','utf-8')
//         //                 },
//         //                 {   // file on disk as an attachment
//         //                     filename: 'text3.txt',
//         //                     path: '/path/to/file.txt' // stream this file
//         //                 },
//         //                 {   // filename and content type is derived from path
//         //                     path: '/path/to/file.txt'
//         //                 },
//         //                 {   // stream as an attachment
//         //                     filename: 'text4.txt',
//         //                     content: fs.createReadStream('file.txt')
//         //                 },
//         //                 {   // define custom content type for the attachment
//         //                     filename: 'text.bin',
//         //                     content: 'hello world!',
//         //                     contentType: 'text/plain'
//         //                 },
//         //                 {   // use URL as an attachment
//         //                     filename: 'license.txt',
//         //                     path: 'https://raw.github.com/nodemailer/nodemailer/master/LICENSE'
//         //                 },
//         //                 {   // encoded string as an attachment
//         //                     filename: 'text1.txt',
//         //                     content: 'aGVsbG8gd29ybGQh',
//         //                     encoding: 'base64'
//         //                 },
//         //                 {   // data uri as an attachment
//         //                     path: 'data:text/plain;base64,aGVsbG8gd29ybGQ='
//         //                 },
//         //                 {
//         //                     // use pregenerated MIME node
//         //                     raw: 'Content-Type: text/plain\r\n' +
//         //                          'Content-Disposition: attachment;\r\n' +
//         //                          '\r\n' +
//         //                          'Hello world!'
//         //                 }
//         //             ],
//     onError: (e) => console.log(e),
//     onSuccess: (i) => console.log(i)
// }


// );
